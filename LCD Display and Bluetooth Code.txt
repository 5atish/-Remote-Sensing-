#include <LiquidCrystal.h>

const byte led = 13;
const byte interruptPin = 2;
const byte tempPin = A0;
const byte ldrPin = A1;
volatile byte state = LOW; 


LiquidCrystal lcd(13, 9, 5, 4, 3, 6);

void setup() {
  Serial.begin(57600);
  pinMode(led, OUTPUT);
  pinMode(interruptPin, INPUT_PULLUP); 

  attachInterrupt(digitalPinToInterrupt(interruptPin), flick, RISING);//run flick() on rising edge of pin2
  
  lcd.begin(16, 2);
//  lcd.print("Hello freind");//print message once as intro 
  

  delay(1500);
}

void loop() {
  digitalWrite(led, state);
  int temp = analogRead(tempPin);
  int light = analogRead(ldrPin);
  if(state == HIGH){
    Serial.print("Light: ");
    Serial.println(light);
    lcd.setCursor(0, 0);
    lcd.print("Light value: ");
    lcd.setCursor(0, 1);
    lcd.print(light);
  //  bt_print(0,light);  //print to bluetooth device    
  }
  else{
    Serial.print("Temp: ");
    Serial.println(temp);
    lcd.setCursor(0, 0);
    lcd.print("Temperature val:");
    lcd.setCursor(0, 1);
    lcd.print(temp);
  }
  
  delay(1500);//refresh every 1 seconds 
}

void flick() { //this code doesnt care about your loop(). That is the beuty of interrupt.
  state = !state; //change state.
  lcd.clear();//refresh the screen. without this old messages are left in some spaces.
}